# Copyright (c) 2019 Vitasystems GmbH and Jake Smolka (Hannover Medical School).
#
# This file is part of Project EHRbase
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ------------------------------------------------------------------------------
# General How-to:
#
# You can set all config values here or via an corresponding environment variable which is named as the property you
# want to set. Replace camel case (aB) as all upper case (AB), dashes (-) and low dashes (_) just get ignored adn words
# will be in one word. Each nesting step of properties will be separated by low dash in environment variable name.
# E.g. if you want to allow the delete all endpoints in the admin api set an environment variable like this:
# ADMINAPI_ALLOWDELETEALL=true
#
# See https://docs.spring.io/spring-boot/docs/2.5.0/reference/html/features.html#features.external-config.typesafe-configuration-properties.relaxed-binding.environment-variables
# for official documentation on this feature.
#
# Also see the documentation on externalized configuration in general:
# https://docs.spring.io/spring-boot/docs/2.5.0/reference/html/features.html#features.external-config

spring:
  application:
    name: ehrbase

  cache:
    type: CAFFEINE # change to type redis if usage of redis distributed cache is intended

  # the following redis properties are only used if the cache.type=redis
  redis:
    host: localhost
    port: 6379

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri:  # http://localhost:8081/auth/realms/ehrbase  # Example issuer URI - or set via env var
  profiles:
    active: local
  datasource:
    driver-class-name: org.postgresql.Driver

  flyway:
    schemas: ehr

  jackson:
    default-property-inclusion: NON_NULL

security:
  authType: BASIC
  authUser: ehrbase-user
  authPassword: SuperSecretPassword
  authAdminUser: ehrbase-admin
  authAdminPassword: EvenMoreSecretPassword
  oauth2UserRole: USER
  oauth2AdminRole: ADMIN

# Attribute Based Access Control
abac:
  enabled: false
  # Server URL incl. trailing "/"!
  server: http://localhost:3001/rest/v1/policy/execute/name/
  # Definition of the JWT claim which contains the organization ID.
  organizationClaim: 'organization_id'
  # Definition of the JWT claim which contains the patient ID. Falls back to the EHR's subject.
  patientClaim: 'patient_id'
  # Policies need to be named and configured for each resource. Available parameters are
  # - organization
  # - patient
  # - template
  policy:
    ehr:
      name: 'has_consent_patient'
      parameters: 'organization, patient'
    ehrstatus:
      name: 'has_consent_patient'
      parameters: 'organization, patient'
    composition:
      name: 'has_consent_template'
      parameters: 'organization, patient, template'
      #parameters: 'template'  # for manual testing, doesn't depend on real claims in JWT
    contribution:
      name: 'has_consent_template'
      parameters: 'organization, patient, template'
    query:
      name: 'has_consent_template'
      parameters: 'organization, patient, template'

httpclient:
#proxy: 'localhost'
#proxyPort: 1234

cache:
  init-on-startup: true
  pre-build-queries: true
  pre-build-queries-depth: 4

system:
  allow-template-overwrite: false

openehr-api:
  context-path: /rest/openehr
admin-api:
  active: false
  allowDeleteAll: false
  context-path: /rest/admin

# Logging Properties
logging:
  level:
    org.ehcache: info
    org.jooq: info
    org.jooq.Constants: warn
    org.springframework: info
  pattern:
    console: '%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr([%X]){faint} %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx'

server:
  # Optional custom server nodename
  # nodename: 'local.test.org'

  aqlConfig:
    # if true, WHERE clause is using jsquery, false uses SQL only
    useJsQuery: false
    # ignore unbounded item in path starting with one of
    ignoreIterativeNodeList: 'activities,content'
    # how many embedded jsonb_array_elements(..) are acceptable? Recommended == 2
    iterationScanDepth: 2

  tomcat:
    threads:
      min-spare: 200
      max: 200

  # Option to disable strict invariant validation.
  # disable-strict-validation: true


# Configuration of actuator for reporting and health endpoints
management:
  endpoints:
    # Disable all endpoint by default to opt-in enabled endpoints
    enabled-by-default: false
    web:
      base-path: '/management'
      exposure:
        include: 'env, health, info, metrics, prometheus'
        # The access to management endpoints can be controlled
        # ADMIN_ONLY - (default) endpoints are locked behind an authorization and are only available for users with the admin role
        # PRIVATE - endpoints are locked behind an authorization, but are available to any role
        # PUBLIC - endpoints can be accessed without an authorization
      access: ADMIN_ONLY
  # Per endpoint settings
  endpoint:
    # Env endpoint - Shows information on environment of EHRbase
    env:
      # Enable / disable env endpoint
      enabled: false
    # Health endpoint - Shows information on system status
    health:
      # Enable / disable health endpoint
      enabled: false
      # Show components in health endpoint. Can be "never", "when-authorized" or "always"
      show-components: 'when-authorized'
      # Show details in health endpoint. Can be "never", "when-authorized" or "always"
      show-details: 'when-authorized'
      # Show additional information on used systems. See https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html#production-ready-health-indicators for available keys
      datasource:
        # Enable / disable report if datasource connection could be established
        enabled: true
    # Info endpoint - Shows information on the application as build infor, etc.
    info:
      # Enable / disable info endpoint
      enabled: false
    # Metrics endpoint - Shows several metrics on running EHRbase
    metrics:
      # Enable / disable metrics endpoint
      enabled: false
    # Prometheus metric endpoint - Special metrics format to display in microservice observer solutions
    prometheus:
      # Enable / disable prometheus endpoint
      enabled: false
  # Metrics settings
  metrics:
    export:
      prometheus:
        enabled: true

# Audit Properties
ipf:
  atna:
    audit-enabled: false

# External Terminology Validation Properties
validation:
  external-terminology:
    enabled: false
    provider:
      fhir:
        type: FHIR
        url: https://r4.ontoserver.csiro.au/fhir/

# SSL Properties (used by Spring WebClient and Apache HTTP Client)
client:
  ssl:
    enabled: false

# JavaMelody
javamelody:
  enabled: false

#  plugin configuration
plugin-manager:
  plugin-dir: ./plugin_dir
  plugin-config-dir: ./plugin_config_dir
  enable: true
  plugin-context-path: /plugin
