name: Build & Deploy Docker Image (next)

on:
  push:
    branches:
      - 'develop'
    paths-ignore:
      - '**/*.md'
      - 'doc/**'
      - 'tests/**'
  repository_dispatch:
    types: [ build-ehrbase-next ]
  workflow_dispatch:
    inputs:
      tag:
        description: tag for the image
        required: true
jobs:
  build-docker:
    runs-on: ubuntu-20.04
    steps:
      - name: Calculate tag
        run: |
          if [ -z "${{ github.event.inputs.tag }}" ]
          then
          v='next'
          else
          v=${{ github.event.inputs.tag }}
          fi
          echo "build tag ${v}"
          # Set as Environment for all further steps 
          echo "TAG=${v}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push (AMD64)
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ehrbase/ehrbase:${{env.TAG}}-amd64

      - name: Build and push (ARM64)
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ehrbase/ehrbase:${{env.TAG}}-arm64

      - name: Create and push MultiArch Manifest
        run: |

          docker buildx imagetools create \
                 ehrbase/ehrbase:${{env.TAG}}-arm64 \
                 ehrbase/ehrbase:${{env.TAG}}-amd64 \
                 -t ehrbase/ehrbase:${{env.TAG}}
          docker pull ehrbase/ehrbase:${{env.TAG}}

      - name: Inspect MultiArch Manifest
        run: docker manifest inspect ehrbase/ehrbase:${{env.TAG}}





# STEPS FOR LOCAL REPRODUCTION
# ============================
# provides build runtimes for addition platforms
# > docker run --privileged --rm tonistiigi/binfmt --install all
#
# creates a 'docker-container' driver
# which allows building for multiple platforms 
# > docker buildx create --use --name mybuild
#
# shows build Driver and available target platforms
# > docker buildx inspect mybuild
#
# builds image for specific platform
# and pushes it to docker-hub
# > docker buildx build --push --platform=linux/arm64 -t ehrbase/ehrbase:next-arm .
# > docker buildx build --push --platform=linux/amd64 -t ehrbase/ehrbase:next-amd .
#
# creates multiarch manifest from given images
# and pushes it to docker-hub
# > docker buildx imagetools create ehrbase/ehrbase:next-arm ehrbase/ehrbase:next-amd -t ehrbase/ehrbase:next
#
# inspects created mulitarch image
# > docker manifest inspect ehrbase/ehrbase:next
