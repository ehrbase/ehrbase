{{- $secretKey := .Values.secrets.name -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccount: {{ include "app.serviceAccountName" . }}
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.postgres.enabled }}
      volumes:
      - name: postgres-initdb
        configMap:
          name: postgres-initdb-config
      {{- end}}
      containers:
        {{- if .Values.postgres.enabled }}
        - name: postgres
          imagePullPolicy: IfNotPresent
          image: postgres:latest
          env:
            {{- toYaml .Values.postgres.env | nindent 12 }}
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-initdb
              mountPath: /docker-entrypoint-initdb.d
        {{- end}}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deploymentPort }}
              protocol: TCP

          # readinessProbe:
          #   initialDelaySeconds: 20
          #   exec:
          #     command:
          #     - cat
          #     - /proc/uptime
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- with .Values.environmentVariables }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.postgres.enabled }}
            {{- toYaml .Values.postgres.env | nindent 12 }}
          {{ range .Values.secrets.items }}
            - name: {{ .target }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretKey }}
                  key: {{ .target }}
          {{- end }}
          {{- else }}
          {{ range .Values.secrets.items }}
            - name: {{ .target }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretKey }}
                  key: {{ .target }}
          {{- end }}
          {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
